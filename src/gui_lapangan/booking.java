/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui_lapangan;

import java.awt.HeadlessException;
import static java.awt.SystemColor.text;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import koneksi.Connect;
import koneksi.koneksiLury;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author ASUS
 */
public class booking extends javax.swing.JFrame {
    koneksiLury con = new koneksiLury();
    private static String id_lapangan;
    private String idBooking;
    int x;
    private String status;
    private int hargaLapangan;
    
    
    
    private static boolean sudahDipanggil = false;
    int hargaSetelahJam5;
    int hargaAwal, hargaAkhir;
    public int  panggilSekaliSaja() {
        
            hargaAwal = Integer.valueOf(hargaLapangan);
        if (!sudahDipanggil) {
            System.out.println("Fungsi ini hanya dapat dipanggil sekali.");
            sudahDipanggil = true;
            int hargaBelumBulat = (int) (hargaAwal  + (hargaAwal* 42.86 / 100));
                       
            hargaAkhir = (int) hargaBelumBulat - (hargaBelumBulat % 1000); 
        } else {
            System.out.println("Fungsi ini sudah dipanggil sebelumnya.");
            //return hargaAkhir;
        }
        return hargaAkhir;
    }
    
    private static boolean checkLapangan(String tanggal, String jamAwal,String jamSelesai){
        boolean checkLapangan = false;
        try{
            Connection con = Connect.koneksi();
            String sql = "SELECT * FROM transaksilapangan WHERE tanggalMain = '"+ tanggal +"' AND jamMulai >= '"+ jamAwal +"' AND jamSelesai <= '"+ jamSelesai +"' AND id_lapangan = '"+ id_lapangan+"'";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            
            checkLapangan = rs.next();

        } catch (SQLException ex) {
            Logger.getLogger(loginUsername.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex);
            
        }
        return checkLapangan;
    }
    
    private void tampil(){
        con.tampil(jTable2, "SELECT `id_lapangan`, `nama_lapangan`, `deskripsi`, `harga_lapangan` FROM `lapangan`");
    }
    
    
    private int hitungJam(){
        String jamAwalText = jamMulai.getValue().toString();
        String jamPenguranganText = jamSelesai.getValue().toString();

        // Parsing teks ke objek LocalTime
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("H:mm");
        LocalTime jamAwal = LocalTime.parse(jamAwalText, formatter);
        LocalTime jamPengurangan = LocalTime.parse(jamPenguranganText, formatter);

        // Pengurangan waktu
        long hasilJam = ChronoUnit.HOURS.between(jamAwal, jamPengurangan);
        //long hasilMenit = ChronoUnit.MINUTES.between(jamPengurangan, jamAwal) % 60;
        int hasil = (int) (hasilJam);

        System.out.println("Hasil pengurangan jam (dalam menit): " + hasil);
        return hasil;
    }
    /**
     * Creates new form booking
     */
    public booking() {
        initComponents();
        tampil();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jamSelesai = new javax.swing.JSpinner();
        jamMulai = new javax.swing.JSpinner();
        txt_jam_mulai = new javax.swing.JTextField();
        txt_harga_lapangan = new javax.swing.JTextField();
        txt_jam_selesai = new javax.swing.JTextField();
        txt_dp = new javax.swing.JTextField();
        txt_nama = new javax.swing.JTextField();
        txt_telpon = new javax.swing.JTextField();
        txt_total_bayar = new javax.swing.JTextField();
        tgl_main = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        booking = new javax.swing.JLabel();
        btn_back = new javax.swing.JButton();
        btn_proses = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jamSelesai.setModel(new javax.swing.SpinnerListModel(new String[] {"05:00", "06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00", "24:00"}));
        jamSelesai.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jamSelesaiStateChanged(evt);
            }
        });
        jamSelesai.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jamSelesaiKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jamSelesaiKeyReleased(evt);
            }
        });
        getContentPane().add(jamSelesai, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 345, 150, -1));

        jamMulai.setModel(new javax.swing.SpinnerListModel(new String[] {"05:00", "06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00", "24:00"}));
        jamMulai.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jamMulaiStateChanged(evt);
            }
        });
        jamMulai.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jamMulaiComponentHidden(evt);
            }
        });
        getContentPane().add(jamMulai, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 280, 150, -1));

        txt_jam_mulai.setBackground(new java.awt.Color(60, 128, 128));
        txt_jam_mulai.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_jam_mulai.setForeground(new java.awt.Color(255, 255, 255));
        txt_jam_mulai.setBorder(null);
        getContentPane().add(txt_jam_mulai, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 280, 150, 20));

        txt_harga_lapangan.setBackground(new java.awt.Color(60, 128, 128));
        txt_harga_lapangan.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_harga_lapangan.setForeground(new java.awt.Color(255, 255, 255));
        txt_harga_lapangan.setBorder(null);
        txt_harga_lapangan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_harga_lapanganActionPerformed(evt);
            }
        });
        getContentPane().add(txt_harga_lapangan, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 150, 20));

        txt_jam_selesai.setBackground(new java.awt.Color(60, 128, 128));
        txt_jam_selesai.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_jam_selesai.setForeground(new java.awt.Color(255, 255, 255));
        txt_jam_selesai.setBorder(null);
        getContentPane().add(txt_jam_selesai, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 340, 150, 20));

        txt_dp.setBackground(new java.awt.Color(60, 128, 128));
        txt_dp.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_dp.setForeground(new java.awt.Color(255, 255, 255));
        txt_dp.setBorder(null);
        txt_dp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_dpActionPerformed(evt);
            }
        });
        getContentPane().add(txt_dp, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 500, 160, 20));

        txt_nama.setBackground(new java.awt.Color(60, 128, 128));
        txt_nama.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_nama.setForeground(new java.awt.Color(255, 255, 255));
        txt_nama.setBorder(null);
        getContentPane().add(txt_nama, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 210, 150, 20));

        txt_telpon.setBackground(new java.awt.Color(60, 128, 128));
        txt_telpon.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_telpon.setForeground(new java.awt.Color(255, 255, 255));
        txt_telpon.setBorder(null);
        getContentPane().add(txt_telpon, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 280, 150, 20));

        txt_total_bayar.setBackground(new java.awt.Color(60, 128, 128));
        txt_total_bayar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_total_bayar.setForeground(new java.awt.Color(255, 255, 255));
        txt_total_bayar.setBorder(null);
        getContentPane().add(txt_total_bayar, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 500, 150, 20));

        tgl_main.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tgl_main.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tgl_mainAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        getContentPane().add(tgl_main, new org.netbeans.lib.awtextra.AbsoluteConstraints(325, 210, 150, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 270, 230));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Vector.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        booking.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/booking.jpg"))); // NOI18N
        booking.setPreferredSize(new java.awt.Dimension(847, 549));
        getContentPane().add(booking, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, -1));

        btn_back.setText("jButton1");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });
        getContentPane().add(btn_back, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 23, 50, 40));

        btn_proses.setText("proses");
        btn_proses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_prosesActionPerformed(evt);
            }
        });
        getContentPane().add(btn_proses, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 490, 110, 40));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new admin().setVisible(true);
    }//GEN-LAST:event_btn_backActionPerformed

    private void tgl_mainAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tgl_mainAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tgl_mainAncestorAdded

    private String dateNow(){
         LocalDate currentDate = LocalDate.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("ddMMyyyy");
        String formattedDate = currentDate.format(formatter);
        System.out.println("Current date in ddMMyyyy format: " + formattedDate);
        return formattedDate;
    }
    
    private void btn_prosesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_prosesActionPerformed
        
        try {
            idBooking = con.autoNumber(txt_dp, "SELECT `kode_booking` FROM transaksilapangan WHERE `kode_booking` LIKE '%"+ dateNow() +"%' ORDER BY `kode_booking` DESC", "kode_booking", "TSC");
        String jamPertama = jamMulai.getValue().toString();
        String jamKedua = jamSelesai.getValue().toString();
        System.out.println(idBooking);
        LocalTime time1 =   LocalTime.parse(jamPertama);
        LocalTime time2 = LocalTime.parse(jamKedua);
        String statusTransaksi;
        String tanggalJDateCalender = con.formatTanggal(tgl_main,"yyyy-MM-dd");
        
        if (time1.isBefore(time2)) {
            System.out.println("Nilai jam ke-1 tidak lebih dari jam ke-2");
            if (txt_total_bayar.getText().equals("Lunas")) {
                statusTransaksi = "Lunas";
            }else{
                statusTransaksi = "Booking";
            }
            String sql = "INSERT INTO `transaksilapangan` (`kode_booking`, `id_lapangan`, `nama`, `nomerTelpon`, `tanggalBooking`, `tanggalMain`, `jamMulai`, `jamSelesai`, `tarif`, `dp`, `status`)"
                    + " VALUES ('"+ idBooking +"', '"+ id_lapangan +"', '"+ txt_nama.getText() +"', '"+ txt_telpon.getText() +"', current_timestamp(), '"+ tanggalJDateCalender +"', '"+ jamMulai.getValue().toString() +"', '"+ jamSelesai.getValue().toString() +"', '"+ txt_harga_lapangan.getText() +"', '"+ txt_dp.getText() +"', '"+ statusTransaksi +"')";
            if (checkLapangan(tanggalJDateCalender, jamPertama, jamKedua)){
                
                JOptionPane.showMessageDialog(rootPane, "Lapangan Telah dibooking");
            }else{
                System.out.println("Ada");
            }
            
            //con.Eksekusi(sql,"Berhasil", 1);
        }  else if (time1.equals(time2)) {
            System.out.println("Nilai jam ke-1 sama jam ke-2");
        } else{
            System.out.println("Nilai jam ke-1 lebih besar dari jam ke-2");
        }
        //batasss
//        try {
//                String report = con.currentDirectory + "\\src\\notadanlaporan\\cetakStrukBooking.jrxml";
//                 HashMap hash = new HashMap();
//                //Mengambil parameter dari ireport
//                hash.put("kodeBooking", idBooking);
//
//     
//                JasperReport JRpt = JasperCompileManager.compileReport(report);
//                JasperPrint JPrint = JasperFillManager.fillReport(JRpt, hash, con.getConnection());
//                JasperViewer.viewReport(JPrint, false);
//            } catch (JRException rptexcpt) {
//                System.out.println("Program tidak bisa karena : " + rptexcpt);
//            }
        } catch (HeadlessException e) {
            JOptionPane.showConfirmDialog(rootPane, "Gagal Menampilkan Report " + e.getMessage());
        }
           
    }//GEN-LAST:event_btn_prosesActionPerformed

    private void jamMulaiComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jamMulaiComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jamMulaiComponentHidden

    private void jamSelesaiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jamSelesaiKeyPressed
        
    }//GEN-LAST:event_jamSelesaiKeyPressed

    private void jamSelesaiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jamSelesaiKeyReleased
      
    }//GEN-LAST:event_jamSelesaiKeyReleased

    private void jamSelesaiStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jamSelesaiStateChanged
       System.out.println(String.valueOf(hitungJam()));
       String jamPertama = jamMulai.getValue().toString();
          LocalTime time1 =   LocalTime.parse(jamPertama);
        LocalTime waktuSekarang = time1;
        LocalTime waktuBatas = LocalTime.of(17, 0); // Waktu batas 17.00
      
       //int hargaLapanganBaru = hargaLapanganLama * hitungJam();
        //System.out.println(hargaLapanganBaru);
      //  i long selisih = ChronoUnit.MINUTES.between(jamPengurangan, jamAwal);

        // Menentukan tindakan berdasarkan tanda selisih waktu
        if (hitungJam() > 0) {
            
            if (waktuSekarang.isAfter(waktuBatas)) {
            System.out.println("Saat ini sudah lebih dari jam 17.00");
            // Lakukan aksi yang diinginkan di sini
           
            
            hargaSetelahJam5 = panggilSekaliSaja();
            int hargaLapanganBaru = hargaSetelahJam5 * hitungJam();
            System.out.println(hargaLapanganBaru);
            txt_harga_lapangan.setText(String.valueOf(hargaLapanganBaru));
        } else {
            System.out.println("Saat ini belum lebih dari jam 17.00");
            System.out.println("Selisih waktu adalah positif.");
            int hargaLapanganBaru = hargaLapangan * hitungJam();
            System.out.println(hargaLapanganBaru);
            txt_harga_lapangan.setText(String.valueOf(hargaLapanganBaru));
        }
            
        } else if (hitungJam() < 0) {
            System.out.println("Selisih waktu adalah negatif.");
            // Tidak melakukan apa-apa untuk selisih waktu negatif
        } else {
            System.out.println("Selisih waktu adalah nol.");
            // Tidak melakukan apa-apa untuk selisih waktu nol
        }
    }//GEN-LAST:event_jamSelesaiStateChanged

    private void jamMulaiStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jamMulaiStateChanged
        String jamPertama = jamMulai.getValue().toString();
          LocalTime time1 =   LocalTime.parse(jamPertama);
        LocalTime waktuSekarang = time1;
        LocalTime waktuBatas = LocalTime.of(17, 0); // Waktu batas 17.00
        
            

        if (waktuSekarang.isAfter(waktuBatas)) {
            System.out.println("Saat ini sudah lebih dari jam 17.00");
            // Lakukan aksi yang diinginkan di sini
           
            
            hargaSetelahJam5 = panggilSekaliSaja();
            txt_harga_lapangan.setText(String.valueOf(hargaSetelahJam5));
        } else {
            System.out.println("Saat ini belum lebih dari jam 17.00");
            txt_harga_lapangan.setText(jTable2.getValueAt(x, 3).toString());
        }
    }//GEN-LAST:event_jamMulaiStateChanged

    private void txt_dpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_dpActionPerformed
        int hargaLapangan = Integer.valueOf(txt_harga_lapangan.getText());
        int dp = Integer.valueOf(txt_dp.getText());
        int total =  hargaLapangan - dp;
        if (rootPaneCheckingEnabled) {
            if (hargaLapangan == dp) {
                txt_total_bayar.setText("Lunas");
                status = "Lunas";
            }else{
                txt_total_bayar.setText(String.valueOf(total));
                status = "Booking";
            }
        }
    }//GEN-LAST:event_txt_dpActionPerformed

    private void txt_harga_lapanganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_harga_lapanganActionPerformed
        
    }//GEN-LAST:event_txt_harga_lapanganActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        x = jTable2.getSelectedRow();
        
        id_lapangan = jTable2.getValueAt(x, 0).toString();
        txt_harga_lapangan.setText(jTable2.getValueAt(x, 3).toString());
        hargaLapangan = Integer.parseInt(jTable2.getValueAt(x, 3).toString());
    }//GEN-LAST:event_jTable2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new booking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel booking;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_proses;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JSpinner jamMulai;
    private javax.swing.JSpinner jamSelesai;
    private com.toedter.calendar.JDateChooser tgl_main;
    private javax.swing.JTextField txt_dp;
    private javax.swing.JTextField txt_harga_lapangan;
    private javax.swing.JTextField txt_jam_mulai;
    private javax.swing.JTextField txt_jam_selesai;
    private javax.swing.JTextField txt_nama;
    private javax.swing.JTextField txt_telpon;
    private javax.swing.JTextField txt_total_bayar;
    // End of variables declaration//GEN-END:variables
}
